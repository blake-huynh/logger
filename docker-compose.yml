version: '2'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - 9092:9092
    volumes:
      - ./data/kafka:/var/run/docker.dock
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic1:1:1"
    depends_on:
      - zookeeper
    links:
      - zookeeper
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - ./data/redis/data:/data
  # web:
  #   container_name: web
  #   build: ./web
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./web:/web
  #   environment:
  #     - PORT=3000
  #     - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/postgres
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #     - KAFKA_TOPIC=topic1
  #     - REDIS_URL=redis://redis:6379
  #     - HOST_IP=${HOST_IP}
  #   depends_on:
  #     #- postgres
  #     - kafka
  #     #- redis
  #   links:
  #     - kafka
  # worker:
  #   container_name: worker
  #   build: ./worker
  #   ports:
  #     - 8081:8080
  #   volumes:
  #     - ./web:/web
  #   environment:
  #     - PORT=8081
  #     - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/postgres
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #     - KAFKA_TOPIC=topic1
  #     - REDIS_URL=redis://redis:6379
  #     - HOST_IP=${HOST_IP}
  #   depends_on:
  #     - postgres
  #     - kafka
  #     - redis
